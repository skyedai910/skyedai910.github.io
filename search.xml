<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo博客搭建&Next主题安装]]></title>
    <url>%2FHexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%26Next%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[新建一个Github仓库首先在 GitHub 新建一个仓库（Repository），名称为 {username}.github.io，注意这个名比较特殊，必须要是 github.io为后缀结尾的。比如GitHub用户名叫test，那我就新建一个test.github.io，新建完成之后就可以进行后续操作了。（这里省略配置本地git环境，具体请谷歌。主要内容是配置SSH连接） 安装环境安装Node.js首先在电脑上安装Node.js，下载地址在这里，可以安装Stable版本。安装完毕后，确定环境变量配置好。在cmd中输入npm --version显示版本，即配置成功。 安装HexoHexo相当于博客的底层框架。Hexo提供命令行工具，用于快速创建项目、页面、编译和部署Hexo博客。安装命令如下： 1npm install -g hexo-cil 初始化博客先在本地新一个文件夹，作为blog的源码以及生成的静态网页存储的地方。进入文件夹，右键选择git bash here。 首先使用命令新建项目： 1hexo init &#123;name&#125; 等待完成过后，文件夹下出现hexo的初始化文件，文件结构如下： 123456789101112131415.├── node_modules //依赖安装目录├── scaffolds //模板文件夹，新建的文章将会从此目录下的文件中继承格式| ├── draft.md //草稿模板| ├── page.md //页面模板| └── post.md //文章模板├── source //资源文件夹，用于放置图片、数据、文章等资源| └── _posts //文章目录├── themes //主题文件夹| └── landscape //默认主题├── .gitignore //指定不纳入git版本控制的文件├── _config.yml //站点配置文件├── db.json ├── package.json└── package-lock.json 使命命令让Hexo编译生成HTML代码： 1hexo g 使用命令让网站在本地运行：(在本地4000端口上查看博客) 1hexo s 部署接下来我们先将这个初始化的博客部署到Github Pages上面验证一下其可用性。成功之后我们在进行其他操作。 在部署之前，我们需要修改本地文件夹中根目录下的_config.yml。找到Deloyment，将你自己的仓库连接地址填入，然后选择master分支。修改后文件参考： 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: &#123;将这里含&#123;&#125;替换为你的仓库地址&#125; branch: master 还需要额外安装一个支持GIT的部署插件，才能拿顺利部署到github上面： 1npm install hexo-deployer-git --save 完成准备工作后，执行部署命令： 1hexo d 接收到INFO Deploy done: git信息后，blog就成功部署到github page上面，直接访问你的仓库URL就能打开你的blog了，内容与在本地生成的一模一样。 这里注意一点：在仓库master中的内容是本地目录下的public的内容。也就是说hexo把编译后的静态页面内容上传到github的master分支上面。 如何将博客源码放到github上，我们在后面的高级应用再说。 配置站点基本信息站点基本信息配置文件在根目录的_config.yml中保存。找到site区域，这里可以配置站点标题、副标题等等信息： 123456# Sitetitle: 这是站点标题subtitle: 这是站点副标题description: 这是站点描述keywords: "这是站点关键字"author: 这是站点作者 另外还可以设置一下语言，如果要设置为汉语的话可以将 language 的字段设置为 zh-CN，修改如下： 1language: zh-CN 到这里就配置完站点的基本信息，其他参数请参看官方说明，然后按需修改。 修改主题接下来，我们就来安装Next主题。主题的github地址。 在本地博客文件夹的根目录下，clone主题仓库： 1git clone https://github.com/theme-next/hexo-theme-next themes/next 执行完毕后，next主题源码就会出现在thems/next。 然后需要修改hexo中的主题选项设置，也就是我们需要修改根目录下的_config.yml文件，将theme的参数修改为next： 1theme: next 重新打开blog，就能看到加载的新主题了。 主题配置样式Next主题提供了4种细分风格样式，通过修改/theme/next/_config.yml文件中的scheme参数选择： 1234# scheme: Muse#scheme: Mistscheme: Pisces#scheme: Gemini faviconfavicon就是站点标签栏的小图标，默认使用Hexo的小图标。可以利用这个网站，将图片转化为站点小图标，图标保存在/themes/next/source/images下面。 然后在主题配置文件中配置favicon选项，把一些相关路径配置后，刷新网页图标就会被刷新。 12345favicon: small: /images/favicon-16x16.png medium: /images/favicon-32x32.png apple_touch_icon: /images/apple-touch-icon.png safari_pinned_tab: /images/safari-pinned-tab.svg avateravatar 就是类似于站点的头像，如果设置了这个，会在站点的作者信息旁边额外显示一个头像。 将头像保存在/themes/next/source/images/，然后在主题_config.yml文件下编辑avatar的配置，填入头像的路径即可。 12345678910# Sidebar Avataravatar: # In theme directory (source/images): /images/avatar.gif # In site directory (source/uploads): /uploads/avatar.gif # You can also use other linking images. url: /images/avatar.png # If true, the avatar would be dispalyed in circle.(是否以圆形显示) rounded: true # If true, the avatar would be rotated with the cursor.（是否开启旋转效果） rotated: true 文章现在整个站点只有一篇文章，那么我们怎样来增加其他的文章呢？ 这个很简单，只需要调用 Hexo 提供的命令即可，比如我们要新建一篇「HelloWorld」的文章，命令如下： 1hexo new hello-world 创建的文章会出现在 source/_posts 文件夹下，是 MarkDown 格式。 在文章开头通过如下格式添加必要信息： 123456789101112---title: 标题 # 自动创建，如 hello-worlddate: 日期 # 自动创建，如 2019-09-22 01:47:21tags: - 标签1- 标签2- 标签3categories:- 分类1- 分类2--- 开头下方撰写正文，MarkDown 格式书写即可。]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
